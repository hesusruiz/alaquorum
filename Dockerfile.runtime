# Use the official golang docker image
FROM golang:1.19 AS build

# Get dependencies - will also be cached if we won't change go.mod/go.sum
COPY go.mod /go-ethereum/
COPY go.sum /go-ethereum/
WORKDIR /go-ethereum
RUN cd /go-ethereum && go mod tidy

# Add sources to the build directory inside container
ADD . /go-ethereum

# And build Geth
RUN cd /go-ethereum && make geth bootnode

# For runtime use a distroless image to make it as small as possible.
# There is an even smaller one ('gcr.io/distroless/static-debian11') which
# does not include glibc, libssl and openssl.
# But to play safe we use an image including those libraries.
FROM gcr.io/distroless/base-debian11

# Copy the application binary
COPY --from=build /go-ethereum/build/bin/geth /geth
COPY --from=build /go-ethereum/build/bin/bootnode /bootnode

# Expose the P2P port, both for TCP and UDP
EXPOSE 21000/tcp
EXPOSE 21000/udp

# Expose the JSON-RPC port for HTTP
EXPOSE 22000
# Expose the JSON-RPC port for WebSockets
EXPOSE 22001

ENTRYPOINT ["/geth"]
